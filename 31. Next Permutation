class Solution {
    public void nextPermutation(int[] nums) {
        int i = nums.length - 1;
        while(i > 0) {
            if(nums[i-1] < nums[i]) {
                break;
            }
            
            i--;
        }


        if(i == 0) {
            reverse(nums, i, nums.length - 1);
            return;
        }

        int index = i - 1;

        int j = nums.length - 1;
        while(true) {
            if(nums[j] > nums[index]) {
                // swap
                int temp = nums[index];
                nums[index] = nums[j];
                nums[j] = temp;
                break;
            }
            j--;
        }

        reverse(nums, i, nums.length - 1);
    }

    private void reverse(int[] nums, int startIndex, int endIndex) {
        while(startIndex <= endIndex) {
            int temp = nums[startIndex];
            nums[startIndex] = nums[endIndex];
            nums[endIndex] = temp;

            startIndex++;
            endIndex--;
        }
    }
}
