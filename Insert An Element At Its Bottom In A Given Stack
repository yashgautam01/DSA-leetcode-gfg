import java.util.* ;
import java.io.*; 
public class Solution 
{
  public static Stack<Integer> pushAtBottom(Stack <Integer> myStack, int x) 
  {
    // Write your code here
    


    Stack<Integer> newstack = new Stack<>();
    while(!myStack.isEmpty()){

    
    
    
      newstack.push(myStack.peek());
      myStack.pop();
    }
    myStack.push(x);
    while(!newstack.isEmpty()){
      myStack.push(newstack.peek());
      newstack.pop();

    }
    return myStack;
  }
}



import java.util.* ; 
import java.io.*;

  public class Solution  { 
     public static Stack<Integer> pushAtBottom(Stack <Integer> myStack, int x)
        {     
           solve(myStack,x); 
                return myStack;  
                } 
                public static void solve(Stack<Integer> s, int x){
                      //base case   
                       if(s.isEmpty()){       
                          s.push(x);   
                            return;    }   
                             int num=s.peek(); 
                                s.pop();    
                                //recursive call 
                                
                                   solve(s,x);
                                       s.push(num);
                                        } 
                                        }  
